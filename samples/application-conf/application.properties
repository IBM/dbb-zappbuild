# Build properties used by zAppBuild/build.groovy

#
# Run zUnit Tests
# Defaults to "false", to enable, set to "true"
#runzTests=true

#
# Comma separated list of additional application property files to load
# Supports both relative path (to ${application}/application-conf/) and absolute path
applicationPropFiles=file.properties,bind.properties,Assembler.properties,BMS.properties,Cobol.properties,LinkEdit.properties,bind.properties,PLI.properties,MFS.properties,PSBgen.properties,DBDgen.properties,ACBgen.properties,REXX.properties,ZunitConfig.properties

#
# Comma separated list all source directories included in application build. Supports both absolute
# and relative paths.  Relative assumed to be relative to ${workspace}.
# ex: applicationSrcDirs=${application},/u/build/common/copybooks
applicationSrcDirs=${application}

#
# Comma separated list of the build script processing order
buildOrder=BMS.groovy,MFS.groovy,Cobol.groovy,Assembler.groovy,PLI.groovy,LinkEdit.groovy,DBDgen.groovy,PSBgen.groovy

#
# Comma seperated list of the test script processing order
testOrder=ZunitConfig.groovy

#
# The main build branch.  Used for cloning collections for topic branch builds instead
# of rescanning the entire application.
mainBuildBranch=master

#
# The git repository URL of the application repository to establish links to the changed files 
# in the build result properties 
# ex: for GitHub: https://github.com/ibm/dbb-zappbuild/
gitRepositoryURL=

#
# exclude list used when scanning or running full build
excludeFileList=.*,**/*.properties,**/*.xml,**/*.groovy,**/*.json,**/*.md,**/application-conf/*.*

#
# comma-separated list of file patterns for which impact calculation should be skipped. Uses glob file patterns
# sample: skipImpactCalculationList=**/epsmtout.cpy,**/centralCopybooks/*.cpy
skipImpactCalculationList=

#
# Job card, please use \n to indicate a line break and use \ to break the line in this property file
# Example: jobCard=//RUNZUNIT JOB ,MSGCLASS=H,CLASS=A,NOTIFY=&SYSUID,REGION=0M
jobCard=



#
# Impact analysis resolution rules (JSON format).
# Defaults to just looking for local application dependency folders
impactResolutionRules=[${copybookRule},${plincRule},${maclibRule},${asmCopyRule},${rexxRule},${linkRule},${testcaseRule},${testconfigRule},${propertyRule}]

# Rule to locate Cobol copy books. This rule defaults to the local copybook folder
# in the main application folder.
copybookRule = {"library": "SYSLIB", \
                  "searchPath": [ \
                    {"sourceDir": "${workspace}", "directory": "${application}/copybook"} \
                 ] \
               }

# Rule to locate PLI include files. This rule defaults to the local plinc folder
# in the main application folder.
plincRule = {"library": "SYSLIB", \
                  "searchPath": [ \
                    {"sourceDir": "${workspace}", "directory": "${application}/plinc"} \
                 ] \
               }

# Rule to locate ASM macros. This rule defaults to the local maclib folder
# in the main application folder.
# Category filters on what you want to include during the scanner (i.e. excludes macro-def keyword)
maclibRule = {"library": "SYSLIB", "category": "MACRO", \
                  "searchPath": [ \
                    {"sourceDir": "${workspace}", "directory": "${application}/maclib"} \
                 ] \
               }

# Rule to locate ASM copybooks. This rule defaults to the local maclib folder
# in the main application folder.
asmCopyRule = {"library": "SYSLIB", "category": "COPY", \
                  "searchPath": [ \
                    {"sourceDir": "${workspace}", "directory": "${application}/maclib"} \
                 ] \
              }

# Rule to locate REXX includes. This rule defaults to the local rexx folder
# in the main application folder.
rexxRule = {"library": "SYSLIB", "category": "COPY", \
                  "searchPath": [ \
                    {"sourceDir": "${workspace}", "directory": "${application}/rexx"} \
                 ] \
              }

# Rule to locate Link files for rebuilding statically linked load modules
linkRule =   {"category": "LINK", \
              "searchPath": [ \
                 {"sourceDir": "${workspace}", "directory": "${application}/link"} \
              ] \
            }

# Rule to locate the zUnit test configuration file
testconfigRule =   {"library": "SYSPROG", \
              "searchPath": [ \
                 {"sourceDir": "${workspace}", "directory": "${application}/testcfg"} \
              ] \
            }

# Rule to locate the zUnit playback file
testcaseRule =   {"library": "SYSPLAY", \
              "searchPath": [ \
                 {"sourceDir": "${workspace}", "directory": "${application}/testplayfiles"} \
              ] \
            }

# Rule to detect DBB Build property changes 
propertyRule =   {"category": "PROPERTY"} 