# Application script mappings and file property overrides

#
# Script mappings for all application programs
dbb.scriptMapping = Assembler.groovy :: **/*.asm
dbb.scriptMapping = BMS.groovy :: **/*.bms
dbb.scriptMapping = MFS.groovy :: **/*.mfs
dbb.scriptMapping = PSBgen.groovy :: **/psb/*.asm
dbb.scriptMapping = DBDgen.groovy :: **/dbd/*.asm
dbb.scriptMapping = Cobol.groovy :: **/*.cbl
dbb.scriptMapping = LinkEdit.groovy :: **/*.lnk
dbb.scriptMapping = PLI.groovy :: **/*.pli
dbb.scriptMapping = ZunitConfig.groovy :: **/*.bzucfg
dbb.scriptMapping = Transfer.groovy :: **/*.jcl, **/*.xml
dbb.scriptMapping = zCEE3.groovy :: **/openapi.yaml
dbb.scriptMapping = CRB.groovy :: **/crb/*.yaml

#
# dbb.scannerMapping to map files extensions to DBB dependency scanner configurations
#
#  to override/expand the definitions from build-conf/defaultzAppBuildConf.properties
#
#  this maps file extensions to scanner configuration for the DBB dependency scanners
#  also see:
#  https://www.ibm.com/docs/api/v1/content/SS6T76_2.0.0/javadoc/com/ibm/dbb/dependency/DependencyScannerRegistry.html
#
#  Schema
#  "scannerClass":"ScannerImplementation" : "languageHint":"DBBScannerHint"  :: comma separated list of file extensions
#
#  Note - if an extension of a build file is not specified in the mapping,
#   zAppBuild will skip scanning the file and only record a LogicalFile without capturing dependencies.
#
# dbb.scannerMapping = "scannerClass":"DependencyScanner", "languageHint":"COB" :: cbl,cpy,cob
# dbb.scannerMapping = "scannerClass":"DependencyScanner", "languageHint":"C" :: c, h
# dbb.scannerMapping = "scannerClass":"DependencyScanner", "languageHint":"ASM" :: asm, mac
# dbb.scannerMapping = "scannerClass":"DependencyScanner", "languageHint":"CPP" :: cpp, hpp
# dbb.scannerMapping = "scannerClass":"DependencyScanner", "languageHint":"PLI" :: pli, inc
# dbb.scannerMapping = "scannerClass":"ZUnitConfigScanner" :: bzucfg

#
# General file level overwrites through DBB Build Properties
# isCICS = true :: **/cobol/member.cbl
# isSQL = true :: **/cobol/member.cbl
# isMQ = true :: **/cobol/member.cbl

#
# Please check for available file property overwrites within samples/application-conf/README.md

#
# file mapping for generated zUnit Test case programs (Cobol) to use a seperate set of libraries
# cobol_testcase = true :: **/testcase/*.cbl

# file mapping for generated zUnit Test case programs (PL/I) to use a seperate set of libraries
# pli_testcase = true :: **/testcase/*.pli

# mapping for overwriting the impactResolution rules in application.properties
# impactResolutionRules=[${copybookRule},${linkRule}] :: **/copy/*.cpy,**/cobol/*.cbl

#########
# Configuration for Transfer.groovy which copies files to target datasets and report them
# in the BuildReport
#########
#
# PropertyMapping to map files using the Transfer.groovy language script to different target datasets
#
# transfer_datasetMapping = transfer_jclPDS :: **/*.jcl
# transfer_datasetMapping = transfer_xmlPDS :: **/xml/*.*
#
# file mapping for overwriting the default deployType of the Transfer.groovy language script
#
# transfer_deployType = JCL :: **/*.jcl
# transfer_deployType = XML :: **/xml/*.*
