# Releng properties used by language/cc.groovy

#
# Comma separated list of required build properties for language/cc.groovy
cpp_requiredBuildProperties=cpp_srcPDS,cpp_objPDS,cpp_loadPDS, \
cpp_compiler,cpp_linkEditor,cpp_tempOptions,cpp_compileMaxRC

#
# CC compiler name
cpp_compiler=CCNDRVR

# CC linker name
cpp_linkEditor=IEWBLINK

#
# cc source data sets
cpp_srcPDS=${hlq}.CC
cpp_incPDS=${hlq}.CC.INCLUDE
cpp_objPDS=${hlq}.OBJ

#
# cc load data sets
cpp_loadPDS=${hlq}.LOAD

# CC test case source data sets
cpp_testcase_srcPDS=${hlq}.TEST.CC

#
# CC test case load data sets
cpp_testcase_loadPDS=${hlq}.TEST.LOAD
#
# List the data sets that need to be created and their creation options
cpp_srcDatasets=${cpp_srcPDS},${cpp_incPDS},${cpp_objPDS}

cpp_srcOptions=cyl space(1,1) lrecl(80) dsorg(PO) recfm(F,B) dsntype(library)

cpp_loadDatasets=${cpp_loadPDS}
cpp_loadOptions=cyl space(1,1) dsorg(PO) recfm(U) blksize(32760) dsntype(library)

cpp_tempOptions=cyl space(5,5) unit(vio) blksize(80) lrecl(80) recfm(f,b) new

#
# List of output datasets to document deletions
cpp_outputDatasets=${cpp_loadPDS}

# CC scanner language hint
dbb.DependencyScanner.languageHint=C :: **/*.c, **/*.cpp, **/*.h

#
# additional libraries for compile SYSLIB concatenation, comma-separated, see definitions in application-conf
# cpp_compileSyslibConcatenation=

#
# additional libraries for linkEdit SYSLIB concatenation, comma-separated, see definitions in application-conf
# cpp_linkEditSyslibConcatenation=

# cpp_dependenciesAlternativeLibraryNameMapping -  an *optional* JSON String of a map defining the target dataset definition for alternate include libraries
#  this property is used to
#   * copy files the to mapped dataset definition (this setting takes precendence over cpp_dependenciesDatasetMapping)
#   * defining additional allocations in the compile step
#  note that the SYSLIB is defaulted to the dataset definition 'cpp_cpyPDS' and is not required to be set here
#  sample: cpp_dependenciesAlternativeLibraryNameMapping = {"MYFILE": "cpp_myfilePDS", "DCLGEN" : "cpp_dclgenPDS"}
cpp_dependenciesAlternativeLibraryNameMapping=

# cpp_dependenciesDatasetMapping - an optional dbb property mapping to map dependencies to different target datasets
#  this property is used when dependencies are copied to the different build libraries, e.q dclgens going into to a dedicated library
#  note, that a dependency file needs to match a single rule
#
#  sample:
#   cpp_dependenciesDatasetMapping = cpp_incPDS :: **/includes/*.cpy
#   cpp_dependenciesDatasetMapping = cpp_dclgenPDS :: **/dclgens/*.cpy
#
#  default copies all dependencies into the dependency dataset definition which was previously passed to the utilities/BuildUitilities.copySourceFiles method
#   cpp_dependenciesDatasetMapping = cpp_incPDS :: **/*
cpp_dependenciesDatasetMapping = cpp_incPDS :: **/*
