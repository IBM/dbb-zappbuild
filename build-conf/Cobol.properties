# Releng properties used by language/Cobol.groovy

#
# Comma separated list of required build properties for Cobol.groovy
cobol_requiredBuildProperties=cobol_srcPDS,cobol_cpyPDS,cobol_objPDS,cobol_loadPDS,\
  cobol_compiler,cobol_linkEditor,cobol_tempOptions,applicationOutputsCollectionName,\
  SDFHCOB,SDFHLOAD,SDSNLOAD,SCEELKED

#
# COBOL compiler name
cobol_compiler=IGYCRCTL

#
# linker name
cobol_linkEditor=IEWBLINK

#
# COBOL source data sets
cobol_srcPDS=${hlq}.COBOL
cobol_cpyPDS=${hlq}.COPY
cobol_objPDS=${hlq}.OBJ
cobol_dbrmPDS=${hlq}.DBRM
cobol_BMS_PDS=${team}.BMS.COPY

#
# COBOL load data sets
cobol_loadPDS=${hlq}.LOAD

#
# COBOL test case source data sets
cobol_testcase_srcPDS=${hlq}.TEST.COBOL

#
# COBOL test case load data sets
cobol_testcase_loadPDS=${hlq}.TEST.LOAD

#
# List the data sets that need to be created and their creation options
cobol_srcDatasets=${cobol_srcPDS},${cobol_cpyPDS},${cobol_objPDS},${cobol_dbrmPDS}
cobol_srcOptions=cyl space(1,1) lrecl(80) dsorg(PO) recfm(F,B) dsntype(library)

cobol_loadDatasets=${cobol_loadPDS}
cobol_loadOptions=cyl space(1,1) dsorg(PO) recfm(U) blksize(32760) dsntype(library)

cobol_tempOptions=cyl space(5,5) unit(vio) blksize(80) lrecl(80) recfm(f,b) new
cobol_printTempOptions=cyl space(5,5) unit(vio) blksize(133) lrecl(133) recfm(f,b) new


#
# List the data sets for tests that need to be created and their creation options
cobol_test_srcDatasets=${cobol_testcase_srcPDS}
cobol_test_srcOptions=cyl space(1,1) lrecl(80) dsorg(PO) recfm(F,B) dsntype(library)

cobol_test_loadDatasets=${cobol_testcase_loadPDS}
cobol_test_loadOptions=cyl space(1,1) dsorg(PO) recfm(U) blksize(32760) dsntype(library)

# Allocation of SYSMLSD Dataset used for extracting Compile Messages to Remote Error List
cobol_compileErrorFeedbackXmlOptions=tracks space(200,40) dsorg(PS) blksize(27998) lrecl(16383) recfm(v,b) new keep

#
# List of output datasets to document deletions
cobol_outputDatasets=${cobol_loadPDS}

#
# COBOL scanner language hint
dbb.DependencyScanner.languageHint=COB :: **/*.cbl, **/*.cpy

#
# Set filter used to exclude certain information from the link edit scanning.
# The value contains a comma separated list of patterns.
# example: A filter of *.SUB1, *.SUB2 will exclude modules SUB1 and SUB2
#          from any dataset. To exclude member HELLO in PDS TEST.COBOL will
#          be matched by the pattern TEST.COBOL.HELLO. The pattern TEST.COBOL.*
#          will match any member in the data set TEST.COBOL.
# The following filter excludes CICS and LE Library references.
dbb.LinkEditScanner.excludeFilter = ${SDFHLOAD}.*, ${SCEELKED}.*

#
# additional libraries for compile SYSLIB concatenation, comma-separated, see definitions in application-conf
# cobol_compileSyslibConcatenation=

#
# additional libraries for linkEdit SYSLIB concatenation, comma-separated, see definitions in application-conf
# cobol_linkEditSyslibConcatenation=

# cobol_dependenciesAlternativeLibraryNameMapping - an *optional* map to define target dataset definition for alternate include libraries
#  this property is used to 
#   * copy files the to mapped dataset definition (PLEASE NOTE! This setting takes precendence over cobol_dependenciesDatasetMapping)
#   * defining additional allocations in the compile step
#
#  note that the SYSLIB is defaulted to the dataset definition 'cobol_cpyPDS' and is not required to be set here
#  sample: cobol_dependenciesAlternativeLibraryNameMapping = [MYFILE: 'cobol_myfilePDS', DCLGEN : 'cobol_dclgenPDS']
cobol_dependenciesAlternativeLibraryNameMapping=

# cobol_dependenciesDatasetMapping - an optional dbb property mapping to map dependencies to different target datasets
#  this property is used when dependencies are copied to the different build libraries, e.q dclgens going into to a dedicated library
#  note, that a dependency file needs to match a single rule
#
#  sample:
#   cobol_dependenciesDatasetMapping = cobol_cpyPDS :: **/copybook/*.cpy
#   cobol_dependenciesDatasetMapping = cobol_dclgenPDS :: **/dclgens/*.cpy
#
#  default copies all dependencies into the dependency dataset definition which was previously passed to the utilities/BuildUitilities.copySourceFiles method
#   cobol_dependenciesDatasetMapping = cobol_cpyPDS :: **/* 
cobol_dependenciesDatasetMapping = cobol_cpyPDS :: **/*
