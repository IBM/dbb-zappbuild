#######################################################################
# build.properties configuration to specify
#  global build properties for zAppBuild
#
#######################################################################


#######################################################################
# Global build properties used by zAppBuild
#

#
# Comma separated list of additional build property files to load
# Supports both relative path (to zAppBuild/build-conf/) and absolute path
#
# These properties files expect to contain centrally managed defaults
#  such as system datasets, language script specific settings
#
buildPropFiles=datasets.properties,dependencyReport.properties,Assembler.properties,BMS.properties,\
MFS.properties,PSBgen.properties,DBDgen.properties,ACBgen.properties,Cobol.properties,\
LinkEdit.properties,PLI.properties,REXX.properties,ZunitConfig.properties,Transfer.properties,\
CRB.properties,zCEE3.properties,zCEE2.properties

#
# Comma separated list of default application configuration property files to load
# Supports both relative path (to zAppBuild/build-conf/) and absolute path
#
# These properties files expect to contain centrally managed defaults
#  and also may reference properties files containing configuration
#  of the language script configurations such as return codes, deploy types
#
# See also application-conf/application.properties#applicationPropFiles
#
# default:
# applicationDefaultPropFiles=defaultzAppBuildConf.properties
#
# extended sample to set default language script configurations:
#
# applicationDefaultPropFiles=defaultzAppBuildConf.properties,\
# default-application-conf/searchPaths.properties,\
# default-application-conf/scriptMappings.properties,\
# default-application-conf/Cobol.properties,\
# default-application-conf/BMS.properties,\
# default-application-conf/PLI.properties,\
# default-application-conf/Transfer.properties,\
# default-application-conf/LinkEdit.properties,\
# default-application-conf/ZunitConfig.properties
#
applicationDefaultPropFiles=defaultzAppBuildConf.properties

#
# applicationConfDir
#
# required build property that specifies the directory of the
# application specific build configurations for zAppBuild, also known
# as application-conf folder
#
# a sample of the application-conf can be found in
#   samples/application-conf
#
# zAppBuild expects a file called application.properties in this directory.
#
# The property also allows for the deployment of
# the application-conf directories to an alternate location rather
# in the application repository.
#
# Default:
# Location within the application repository and resolving the configuration
# based on workspace + application and application-conf
#
# applicationConfDir=${workspace}/${application}/application-conf
#
#
# Example: Static location on USS
# applicationConfDir=/u/build/config/applications/${application}/application-conf
# |- /u/build/config/applications
# |                       |- App1
# |                       |    |- application-conf
# |                       |    |        |- application.properties
# |                       |- App2
# |                       |    |- application-conf
#
# Example: Application config files stored in zAppBuild
# applicationConfDir=${zAppBuildDir}/applications/${application}/application-conf
# |- /u/build/zAppBuild/applications
# |                          |- App1
# |                          |    |- application-conf
# |                          |    |        |- application.properties
# |                          |- App2
# |                          |    |- application-conf
#
applicationConfDir=${workspace}/${application}/application-conf

#
# file extension that indicates the build file is really a build list or build list filter
buildListFileExt=txt

#
# Determine if a subfolder with a timestamp should be created in the buildOutDir location.
# Applies to all build types except userBuild
# Default: true
createBuildOutputSubfolder=true

#
# Minimum required DBB ToolkitVersion to run this version of zAppBuild
#  Build initialization process validates the DBB Toolkit Version in use and matches that against this setting
requiredDBBToolkitVersion=2.0.0

#
# Comma separated list of required build properties for zAppBuild/build.groovy
requiredBuildProperties=buildOrder,buildListFileExt

# dbb.file.tagging controls compile log and build report file tagging. If true, files
# written as UTF-8 or ASCII are tagged.
# If the environment variable _BPXK_AUTOCVT is set ALL, file tagging may have an
# adverse effect if viewing log files and build report via Jenkins.
# In this case, set dbb.file.tagging to false or comment out the line. Default: true
dbb.file.tagging=true

# MetadataStore configuration properties:

# select MetadataStore configuration (either 'file' or 'db2')
metadataStoreType=file

# location of file metadata store.  Default is $USER
#metadataStoreFileLocation=

# Db2 metadata server url
# build.groovy option -url, --url
#metadataStoreDb2Url=jdbc:db2:<Db2 server location>

# Db2 connection configuration property file
# Sample is povided at $DBB_HOME/conf/db2Connection.conf
#metadataStoreDb2ConnectionConf=


# The dbb.gateway.type property determines which gateway type is used for the entire build process
# Possible values are 'legacy' and 'interactive'.  Default if not indicated is 'legacy'
dbb.gateway.type=legacy

# Procedure Name - specified with the procname parameter
dbb.gateway.procedureName=

# Account number - specified with the acctnum parameter
dbb.gateway.accountNumber=

# Group name - specified with a groupid parameter
dbb.gateway.groupId=

# Region size - specified with the regionsz parameter
dbb.gateway.regionSize=

# Gateway logging level.  Add values for multiple types:
# 1 - Log error information
# 2 - Log debug information
# 4 - Log communication information
# 8 - Log time information
# 16 - Log information to the system console
dbb.gateway.logLevel=2

