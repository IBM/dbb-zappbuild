# Releng properties used by language/Assembler.groovy

#
# Comma separated list of required build properties for language/Assembler.groovy
assembler_requiredBuildProperties=assembler_srcPDS,assembler_macroPDS,assembler_objPDS,assembler_loadPDS, \
  assembler_pgm,assembler_linkEditor,assembler_tempOptions,assembler_maxRC, \
  SASMMOD1,SDFHLOAD,SDFHMAC,MACLIB,SCEELKED,SCEEMAC

#
# assembler source data sets
assembler_srcPDS=${hlq}.ASM
assembler_macroPDS=${hlq}.MACRO
assembler_objPDS=${hlq}.OBJ
assembler_dbrmPDS=${hlq}.DBRM

#
# assembler load data sets
assembler_loadPDS=${hlq}.LOAD

#
# List the data sets that need to be created and their creation options
assembler_srcDatasets=${assembler_srcPDS},${assembler_macroPDS},${assembler_objPDS},${assembler_dbrmPDS}
assembler_srcOptions=cyl space(1,1) lrecl(80) dsorg(PO) recfm(F,B) dsntype(library)

assembler_loadDatasets=${assembler_loadPDS}
assembler_loadOptions=cyl space(1,1) dsorg(PO) recfm(U) blksize(32760) dsntype(library)

assembler_tempOptions=cyl space(5,5) unit(vio) blksize(80) lrecl(80) recfm(f,b) new

# Allocation of SYSMLSD Dataset used for extracting Compile Messages to Remote Error List
assembler_compileErrorFeedbackXmlOptions=tracks space(200,40) dsorg(PS) blksize(27998) lrecl(16383) recfm(v,b) new keep

# List of output datasets to document deletions
assembler_outputDatasets=${assembler_loadPDS},${assembler_dbrmPDS}

#
# default assembler execs
assembler_db2precompiler=DSNHPC
assember_cicsprecompiler=DFHEAP1$
assembler_pgm=ASMA90
assembler_linkEditor=IEWBLINK

# ASM scanner language hint
dbb.DependencyScanner.languageHint=ASM :: **/*.asm, **/*.mac

#
# additional libraries for assembler SYSLIB concatenation, comma-separated, see definitions in application-conf
# assembler_assemblySyslibConcatenation=

#
# additional libraries for linkEdit SYSLIB concatenation, comma-separated, see definitions in application-conf
# assembler_linkEditSyslibConcatenation=

# assembler_dependenciesDatasetMapping - an optional dbb property mapping to map dependencies to different target datasets
#  this property is used when dependencies are copied to the different build libraries, e.q dclgens going into to a dedicated library
#  note, that a dependency file needs to match a single rule, target dataset definitions need to exist
#
#  sample:
#   assembler_dependenciesDatasetMapping = assembler_macroPDS :: **/macro/*.mac
#   assembler_dependenciesDatasetMapping = assembler_cpyPDS :: **/copy/*.asmcpy
#
#  default copies all dependencies into the dependency dataset definition which was previously passed to the utilities/BuildUitilities.copySourceFiles method
#   assembler_dependenciesDatasetMapping = assembler_macroPDS :: **/* 
assembler_dependenciesDatasetMapping = assembler_macroPDS :: **/*
